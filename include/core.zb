interface Void {}

interface Int {
  operator+(b: Int): Int;
  operator-(b: Int): Int;
}

interface Char {}
interface Float {}

interface String {
  length: Int;
}

interface Stream {
  operator<<(str: String): Stream;
  end(): Void;
}

interface Promise<T> {
  unary*(): T;
}

interface Array<ItemType> {
  length: Int;
  join(sep: String): String;

  unary*(): ItemType;
}
